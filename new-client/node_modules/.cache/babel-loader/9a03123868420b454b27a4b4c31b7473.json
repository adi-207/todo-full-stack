{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js\";\nimport React, { useReducer } from 'react';\nconst Context = /*#__PURE__*/React.createContext();\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        todos: prevState.todos.map(t => {\n          if (t.id === action.payload) {\n            t.complete = !t.complete;\n          }\n\n          return t;\n        })\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nexport class Provider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Check emails',\n        complete: false\n      }, {\n        id: 2,\n        title: 'Check voicemails',\n        complete: true\n      }, {\n        id: 3,\n        title: 'Check report',\n        complete: false\n      }],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js"],"names":["React","useReducer","Context","createContext","reducer","prevState","action","type","todos","map","t","id","payload","complete","Provider","Component","state","title","dispatch","setState","render","props","children","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AAAEC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AACrC,cAAGA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAnB,EAA4B;AACxBF,YAAAA,CAAC,CAACG,QAAF,GAAa,CAACH,CAAC,CAACG,QAAhB;AACH;;AACD,iBAAOH,CAAP;AACH,SALe;AAAT,OAAP;;AAOJ;AACI,aAAOL,SAAP;AAVR;AAYH,CAbD;;AAeA,OAAO,MAAMS,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJR,MAAAA,KAAK,EAAG,CACJ;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIM,QAAAA,KAAK,EAAE,cAFX;AAGIJ,QAAAA,QAAQ,EAAE;AAHd,OADI,EAMJ;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIM,QAAAA,KAAK,EAAE,kBAFX;AAGIJ,QAAAA,QAAQ,EAAE;AAHd,OANI,EAWJ;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIM,QAAAA,KAAK,EAAE,cAFX;AAGIJ,QAAAA,QAAQ,EAAE;AAHd,OAXI,CADJ;AAkBJK,MAAAA,QAAQ,EAAGZ,MAAD,IAAY,KAAKa,QAAL,CAAcd,SAAS,IAAID,OAAO,CAACC,SAAD,EAAYC,MAAZ,CAAlC;AAlBlB,KADkC;AAAA;;AAsB1Cc,EAAAA,MAAM,GAAI;AACN,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKJ,KAA9B;AAAA,gBACK,KAAKK,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5ByC;AA+B9C,OAAO,MAAMC,QAAQ,GAAGrB,OAAO,CAACqB,QAAzB","sourcesContent":["import React, { useReducer } from 'react'\n\nconst Context = React.createContext()\n\nconst reducer = (prevState, action) => {\n    switch (action.type) {\n        case 'TOGGLE':\n            return { todos: prevState.todos.map(t => {\n                if(t.id === action.payload) {\n                    t.complete = !t.complete\n                }\n                return t\n            }) }\n\n        default:\n            return prevState\n    }\n}\n\nexport class Provider extends React.Component {\n    state = {\n        todos : [\n            {\n                id: 1,\n                title: 'Check emails',\n                complete: false\n            },\n            {\n                id: 2,\n                title: 'Check voicemails',\n                complete: true\n            },\n            {\n                id: 3,\n                title: 'Check report',\n                complete: false\n            }\n        ],\n        dispatch: (action) => this.setState(prevState => reducer(prevState, action) )\n    }\n\n    render () {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}
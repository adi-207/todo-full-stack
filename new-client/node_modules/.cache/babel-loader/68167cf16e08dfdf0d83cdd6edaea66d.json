{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js\";\nimport React from 'react';\nconst Context = /*#__PURE__*/React.createContext();\n\nconst reducer = ({\n  todos\n}, action) => {\n  console.log('reducer clicked');\n  console.log(todos);\n\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        todos: todos.map(t => {\n          console.log(t.complete);\n\n          if (t.id === action.payload) {\n            if (t.complete === false) {\n              t.complete = true;\n            } else if (t.complete === true) {\n              t.complete = false;\n            }\n          }\n\n          return t;\n        })\n      };\n\n    default:\n      return todos;\n  }\n};\n\nexport class Provider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Check emails',\n        complete: false\n      }, {\n        id: 2,\n        title: 'Check voicemails',\n        complete: true\n      }, {\n        id: 3,\n        title: 'Check report',\n        complete: false\n      }],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js"],"names":["React","Context","createContext","reducer","todos","action","console","log","type","map","t","complete","id","payload","Provider","Component","state","title","dispatch","setState","prevState","render","props","children","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,gBAAGD,KAAK,CAACE,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAYC,MAAZ,KAAuB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AAAEJ,QAAAA,KAAK,EAAEA,KAAK,CAACK,GAAN,CAAUC,CAAC,IAAI;AAC3BJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,QAAd;;AACA,cAAGD,CAAC,CAACE,EAAF,KAASP,MAAM,CAACQ,OAAnB,EAA4B;AACxB,gBAAIH,CAAC,CAACC,QAAF,KAAe,KAAnB,EAA0B;AACtBD,cAAAA,CAAC,CAACC,QAAF,GAAa,IAAb;AACH,aAFD,MAEO,IAAKD,CAAC,CAACC,QAAF,KAAe,IAApB,EAA2B;AAC9BD,cAAAA,CAAC,CAACC,QAAF,GAAa,KAAb;AACH;AAIJ;;AAED,iBAAOD,CAAP;AAEH,SAfe;AAAT,OAAP;;AAkBJ;AACI,aAAON,KAAP;AArBR;AAuBH,CA1BD;;AA4BA,OAAO,MAAMU,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJZ,MAAAA,KAAK,EAAE,CACH;AACIQ,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,cAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OADG,EAMH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,kBAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OANG,EAWH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,cAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OAXG,CADH;AAkBJO,MAAAA,QAAQ,EAAGb,MAAD,IAAY,KAAKc,QAAL,CAAcC,SAAS,IAAIjB,OAAO,CAACiB,SAAD,EAAYf,MAAZ,CAAlC;AAlBlB,KADkC;AAAA;;AAsB1CgB,EAAAA,MAAM,GAAI;AAEN,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKL,KAA9B;AAAA,gBACK,KAAKM,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7ByC;AAgC9C,OAAO,MAAMC,QAAQ,GAAGvB,OAAO,CAACuB,QAAzB","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext()\n\nconst reducer = ({ todos }, action) => {\n    console.log('reducer clicked')\n    console.log(todos)\n    switch (action.type) {\n        case \"TOGGLE\":\n            return { todos: todos.map(t => {\n                console.log(t.complete)\n                if(t.id === action.payload) {\n                    if (t.complete === false) {\n                        t.complete = true\n                    } else if ( t.complete === true ) {\n                        t.complete = false\n                    }\n\n\n                    \n                }\n                \n                return t\n                \n            }) }\n\n\n        default:\n            return todos\n    }\n}\n\nexport class Provider extends React.Component {\n    state = {\n        todos: [\n            {\n                id: 1,\n                title: 'Check emails',\n                complete: false\n            },\n            {\n                id: 2,\n                title: 'Check voicemails',\n                complete: true\n            },\n            {\n                id: 3,\n                title: 'Check report',\n                complete: false\n            }\n        ],\n        dispatch: (action) => this.setState(prevState => reducer(prevState, action) )\n    }\n\n    render () {\n        \n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}
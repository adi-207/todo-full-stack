{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Todo.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport { Consumer } from './Context';\n\nclass Todo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      complete: false\n    };\n\n    this.style = () => {\n      const {\n        complete\n      } = this.props.todo;\n      return {\n        textDecoration: complete ? 'line-through' : 'none'\n      };\n    };\n\n    this.toggle = (id, dispatch, complete) => {\n      if (complete === true) {\n        dispatch({\n          type: \"TOGGLE\",\n          payload: id\n        });\n      } else {\n        dispatch({\n          type: \"TOGGLE_2\",\n          payload: id\n        });\n      }\n    };\n\n    this.remove = (id, dispatch) => {\n      Axios.delete(`/todos/${id}`).then(() => dispatch({\n        type: \"REMOVE\",\n        payload: id\n      }));\n      const res = !complete;\n      this.setState({\n        complete: res\n      });\n    };\n  }\n\n  render() {\n    const {\n      title,\n      _id,\n      complete\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(Consumer, {\n      children: value => {\n        const {\n          dispatch\n        } = value;\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center bg-light border-bottom\",\n          style: this.style(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-times-circle fa-sm float-left m-1 text-danger \",\n            onClick: this.remove.bind(this, _id, dispatch)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"m-2 float-right\",\n            onChange: this.toggle.bind(this, _id, dispatch, complete)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Todo.js"],"names":["Axios","React","Consumer","Todo","Component","state","complete","style","props","todo","textDecoration","toggle","id","dispatch","type","payload","remove","delete","then","res","setState","render","title","_id","value","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFuB;;AAAA,SAM/BC,KAN+B,GAMvB,MAAM;AAEV,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKE,KAAL,CAAWC,IAAhC;AAEA,aAAO;AAAEC,QAAAA,cAAc,EAAEJ,QAAQ,GAAG,cAAH,GAAmB;AAA7C,OAAP;AACH,KAX8B;;AAAA,SAa/BK,MAb+B,GAatB,CAACC,EAAD,EAAKC,QAAL,EAAeP,QAAf,KAA4B;AAEjC,UAAGA,QAAQ,KAAK,IAAhB,EAAsB;AAClBO,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAE,QADD;AAELC,UAAAA,OAAO,EAAEH;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACHC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAE,UADD;AAELC,UAAAA,OAAO,EAAEH;AAFJ,SAAD,CAAR;AAIH;AACJ,KA1B8B;;AAAA,SA4B/BI,MA5B+B,GA4BtB,CAACJ,EAAD,EAAKC,QAAL,KAAkB;AACvBb,MAAAA,KAAK,CAACiB,MAAN,CAAc,UAASL,EAAG,EAA1B,EACKM,IADL,CACU,MAAML,QAAQ,CAAC;AACjBC,QAAAA,IAAI,EAAE,QADW;AAEjBC,QAAAA,OAAO,EAAEH;AAFQ,OAAD,CADxB;AAMA,YAAMO,GAAG,GAAG,CAACb,QAAb;AACA,WAAKc,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAEa;AAAX,OAAd;AAEH,KAtC8B;AAAA;;AA0C/BE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAejB,MAAAA;AAAf,QAA2B,KAAKE,KAAL,CAAWC,IAA5C;AAEA,wBACA,QAAC,QAAD;AAAA,gBAAWe,KAAK,IAAI;AAEhB,cAAM;AAAEX,UAAAA;AAAF,YAAeW,KAArB;AAEA,4BAAO;AAAI,UAAA,SAAS,EAAC,oCAAd;AAAmD,UAAA,KAAK,EAAE,KAAKjB,KAAL,EAA1D;AAAA,kCACK;AAAG,YAAA,SAAS,EAAC,uDAAb;AAAqE,YAAA,OAAO,EAAE,KAAKS,MAAL,CAAYS,IAAZ,CAAiB,IAAjB,EAAuBF,GAAvB,EAA4BV,QAA5B;AAA9E;AAAA;AAAA;AAAA;AAAA,kBADL,EACgIS,KADhI,eAEK;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAC,iBAAjC;AAAmD,YAAA,QAAQ,EAAE,KAAKX,MAAL,CAAYc,IAAZ,CAAiB,IAAjB,EAAuBF,GAAvB,EAA4BV,QAA5B,EAAuCP,QAAvC;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH;AATD;AAAA;AAAA;AAAA;AAAA,YADA;AAaH;;AA1D8B;;AA6DnC,eAAeH,IAAf","sourcesContent":["import Axios from 'axios'\nimport React from 'react'\nimport { Consumer } from './Context'\n\n\nclass Todo extends React.Component {\n\n    state = {\n        complete: false\n    }\n\n    style = () => {\n        \n        const { complete } = this.props.todo\n        \n        return { textDecoration: complete ? 'line-through': 'none' }\n    }\n\n    toggle = (id, dispatch, complete) => {\n        \n        if(complete === true) {\n            dispatch({\n                type: \"TOGGLE\",\n                payload: id\n            })\n        } else {\n            dispatch({\n                type: \"TOGGLE_2\",\n                payload: id\n            })\n        }\n    }\n\n    remove = (id, dispatch) => {\n        Axios.delete(`/todos/${id}`)\n            .then(() => dispatch({\n                type: \"REMOVE\",\n                payload: id\n            }))\n\n        const res = !complete\n        this.setState({complete: res })\n        \n    }\n\n  \n\n    render() {\n        const { title, _id , complete} = this.props.todo\n        \n        return (\n        <Consumer>{value => {\n\n            const { dispatch } = value\n\n            return <h3 className='text-center bg-light border-bottom' style={this.style()}>\n                        <i className='far fa-times-circle fa-sm float-left m-1 text-danger ' onClick={this.remove.bind(this, _id, dispatch)} ></i>{title}\n                        <input type='checkbox' className='m-2 float-right' onChange={this.toggle.bind(this, _id, dispatch , complete)}/>\n                </h3>\n            \n        }}</Consumer>\n            \n        )\n    }\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}
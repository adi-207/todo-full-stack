{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js\";\nimport React from 'react';\nconst Context = /*#__PURE__*/React.createContext();\n\nconst reducer = ({\n  todos\n}, action) => {\n  console.log('reducer clicked');\n  console.log(prevState);\n\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        todos: todos.map(t => {\n          console.log(t.complete);\n          if (t.id === action.payload) t.complete = !t.complete;\n          return t;\n        })\n      };\n\n    default:\n      return todos;\n  }\n};\n\nexport class Provider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Check emails',\n        complete: false\n      }, {\n        id: 2,\n        title: 'Check voicemails',\n        complete: true\n      }, {\n        id: 3,\n        title: 'Check report',\n        complete: false\n      }],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["/home/adarsh/Clone-using-react/Intern-assignment/todo-full-stack/client/src/components/Context.js"],"names":["React","Context","createContext","reducer","todos","action","console","log","prevState","type","map","t","complete","id","payload","Provider","Component","state","title","dispatch","setState","render","props","children","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,gBAAGD,KAAK,CAACE,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAYC,MAAZ,KAAuB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACA,UAAQH,MAAM,CAACI,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AAAEL,QAAAA,KAAK,EAAEA,KAAK,CAACM,GAAN,CAAUC,CAAC,IAAI;AAC3BL,UAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,QAAd;AACA,cAAGD,CAAC,CAACE,EAAF,KAASR,MAAM,CAACS,OAAnB,EACIH,CAAC,CAACC,QAAF,GAAa,CAACD,CAAC,CAACC,QADQ;AAM5B,iBAAOD,CAAP;AAEH,SAVe;AAAT,OAAP;;AAYJ;AACI,aAAOP,KAAP;AAfR;AAiBH,CApBD;;AAsBA,OAAO,MAAMW,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJb,MAAAA,KAAK,EAAE,CACH;AACIS,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,cAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OADG,EAMH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,kBAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OANG,EAWH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIK,QAAAA,KAAK,EAAE,cAFX;AAGIN,QAAAA,QAAQ,EAAE;AAHd,OAXG,CADH;AAkBJO,MAAAA,QAAQ,EAAGd,MAAD,IAAY,KAAKe,QAAL,CAAcZ,SAAS,IAAIL,OAAO,CAACK,SAAD,EAAYH,MAAZ,CAAlC;AAlBlB,KADkC;AAAA;;AAsB1CgB,EAAAA,MAAM,GAAI;AAEN,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKJ,KAA9B;AAAA,gBACK,KAAKK,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7ByC;AAgC9C,OAAO,MAAMC,QAAQ,GAAGvB,OAAO,CAACuB,QAAzB","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext()\n\nconst reducer = ({ todos }, action) => {\n    console.log('reducer clicked')\n    console.log(prevState)\n    switch (action.type) {\n        case \"TOGGLE\":\n            return { todos: todos.map(t => {\n                console.log(t.complete)\n                if(t.id === action.payload) (\n                    t.complete = !t.complete\n                    \n                   \n                )\n                \n                return t\n                \n            }) }\n\n        default:\n            return todos\n    }\n}\n\nexport class Provider extends React.Component {\n    state = {\n        todos: [\n            {\n                id: 1,\n                title: 'Check emails',\n                complete: false\n            },\n            {\n                id: 2,\n                title: 'Check voicemails',\n                complete: true\n            },\n            {\n                id: 3,\n                title: 'Check report',\n                complete: false\n            }\n        ],\n        dispatch: (action) => this.setState(prevState => reducer(prevState, action) )\n    }\n\n    render () {\n        \n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}